<Window x:Class="POS.MainView" 
        x:Name="FirstWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:POS"
        xmlns:prismEvents="clr-namespace:Prism.Events;assembly=Prism"
        xmlns:i = "http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei = "http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainView" Height="{x:Static local:POSConstants.getScreenHeight}" Width="{x:Static local:POSConstants.getScreenWidth}"
        WindowState="Maximized"
        WindowStyle="None"
        ResizeMode="NoResize">
    <Window.Resources>

        <local:multiBindCloneConverter x:Key="multiBindCloneConverter"/>

        <sys:Int32 x:Key="fixedValue0">0</sys:Int32>
        <sys:Int32 x:Key="fixedValue1">1</sys:Int32>
        <sys:Int32 x:Key="fixedValue2">2</sys:Int32>
        <sys:Int32 x:Key="fixedValue3">3</sys:Int32>

        <ItemsPanelTemplate x:Key="menuItemsPanel">
            <UniformGrid IsItemsHost="True" Columns="4" />
        </ItemsPanelTemplate>

        <Style x:Key="menuItemContainerTemplate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderThickness="0.8" BorderBrush="LightGray" Background="White" Margin="{Binding Path=(local:POSConstants.getMenuCatalogItemMargin)}" Width="{Binding Path=(local:POSConstants.getMenuCatalogItemWidth)}" Height="{Binding Path=(local:POSConstants.getMenuCatalogItemHeight)}">
                            <StackPanel Orientation="Vertical" CanHorizontallyScroll="False" CanVerticallyScroll="False">
                                <Grid VerticalAlignment="Top" Height="{Binding Path=(local:POSConstants.getMenuCatalogItemHalfHeight)}">
                                    <TextBlock x:Name="itemProduct" Text="{Binding Product}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" FontFamily="Courier" FontSize="18" />
                                </Grid>
                                <Grid VerticalAlignment="Bottom" Height="{Binding Path=(local:POSConstants.getMenuCatalogItemHalfHeight)}">
                                    <TextBlock x:Name="itemPrice" Text="{Binding Price}" VerticalAlignment="Top" HorizontalAlignment="Center" Foreground="OrangeRed" FontFamily="Courier" FontWeight="Medium" FontSize="22" />
                                </Grid>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="OrangeRed"/>
                                <Setter TargetName="itemProduct" Property="Foreground" Value="White"/>
                                <Setter TargetName="itemPrice" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="orderItemContainerTemplate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Border BorderThickness="0 0 0 1" BorderBrush="LightGray" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <StackPanel Orientation="Horizontal" Margin="0,20,0,20" CanHorizontallyScroll="False" CanVerticallyScroll="False">
                                    <TextBlock x:Name="orderQuantity" Text="{Binding Quantity}" Margin="{Binding Path=(local:POSConstants.getMenuOrderItemQuantityMargin)}" Width="{Binding Path=(local:POSConstants.getMenuOrderItemQuantityWidth)}" Foreground="Black" FontFamily="Courier" FontWeight="Bold" FontSize="18" />
                                    <TextBlock x:Name="orderProduct" Text="{Binding Product}" Width="{Binding Path=(local:POSConstants.getMenuOrderItemProductWidth)}" Foreground="Black" FontFamily="Courier" FontSize="18" />
                                    <TextBlock x:Name="orderPrice" Text="{Binding Price}" Width="{Binding Path=(local:POSConstants.getMenuOrderItemPriceWidth)}" Foreground="OrangeRed" FontFamily="Courier" FontWeight="Medium" FontSize="22" />
                                </StackPanel>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="OrangeRed"/>
                                <Setter TargetName="orderQuantity" Property="Foreground" Value="White"/>
                                <Setter TargetName="orderProduct" Property="Foreground" Value="White"/>
                                <Setter TargetName="orderPrice" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="menuOrderItem"  TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Border" BorderThickness="0 0 0 3" BorderBrush="LightGray" Height="auto" Width="auto" VerticalAlignment="Top">
                            <TextBlock Text="{TemplateBinding Text}" Margin="4,4,4,4" FontFamily="Courier" FontWeight="Bold" FontSize="14" Foreground="OrangeRed"/>
                        </Border>

                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="menuOrderBtn" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Border" Background="OrangeRed" Height="{x:Static local:POSConstants.getMenuOrderHeaderDiscardAndTakeOrderHeight}" Width="{x:Static local:POSConstants.getMenuOrderHeaderDiscardAndTakeOrderWidth}" VerticalAlignment="Top">
                            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF534D4D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="menuTabItemTemplate" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Background="White">
                            <Rectangle x:Name="menuItemBottomStrip" Fill="White" Height="{x:Static local:POSConstants.menuItemTabBottomStripHeight}" Width="Auto" VerticalAlignment="Bottom" />
                            <Rectangle Fill="OrangeRed" Height="{x:Static local:POSConstants.menuItemTabBottomConstantStripHeight}" Width="Auto" VerticalAlignment="Bottom" />
                            <TextBlock Text="{TemplateBinding Header}" FontFamily="Courier" FontWeight="Bold" FontSize="14" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="menuItemBottomStrip" Property="Fill" Value="OrangeRed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.Triggers>

    </Window.Triggers>

    <Grid Height="{x:Static local:POSConstants.getScreenHeight}" Width="{x:Static local:POSConstants.getScreenWidth}">

        <Grid Height="{x:Static local:POSConstants.getTitleHeight}" Background="OrangeRed" Width="{x:Static local:POSConstants.getTitleWidth}" VerticalAlignment="Top" HorizontalAlignment="Center">
            <DockPanel>
                <Image Source="/images/title.png" Height="{x:Static local:POSConstants.getTitleLogoHeight}" Margin="15,3,0,0" Width="250" HorizontalAlignment="Left" Stretch="Fill"/>
                <DockPanel Height="{x:Static local:POSConstants.getTitleLogoHeight}" HorizontalAlignment="Right">
                    <TextBlock Text="{Binding Path=order.numOrders, Mode=OneWay}" Foreground="White" FontSize="38" FontFamily="Courier" FontWeight="Light" VerticalAlignment="Center" />
                    <Image Source="/images/exitIcon.png" Margin="20,0,0,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding order.exitApplicationICommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                </DockPanel>
            </DockPanel>
        </Grid>

        <Grid Height="{x:Static local:POSConstants.getMenuHeight}" Width="{x:Static local:POSConstants.getMenuWidth}" VerticalAlignment="Bottom">
            <Rectangle>
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/images/tileSmall.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,10,10" Stretch="Uniform"/>
                </Rectangle.Fill>
            </Rectangle>
            <StackPanel Margin="{x:Static local:POSConstants.getMenuOrderMargin}" Height="{x:Static local:POSConstants.getMenuOrderHeight}" Width="{x:Static local:POSConstants.getMenuOrderWidth}" VerticalAlignment="Center" HorizontalAlignment="Left">
                <Border BorderBrush="LightGray" BorderThickness="1" />
                <Grid Height="{x:Static local:POSConstants.getMenuOrderHeaderHeight}" Background="OrangeRed">
                    <TextBlock Text="Order Summary" Foreground="White" Margin="15,0,0,10" FontSize="36" FontFamily="Courier" FontWeight="Light" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                    <Button Style="{StaticResource menuOrderBtn}" VerticalAlignment="Top" HorizontalAlignment="Left" Command="{Binding order.removeOrderItemBtnICommand}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock TextBlock.FontFamily="Courier" TextBlock.FontSize="14" TextBlock.Foreground="White">REMOVE</TextBlock>
                            <Image Source="/images/remove.png" Height="15" Width="15" Margin="10,0,0,2"/>
                        </StackPanel>
                    </Button>
                    <Button Style="{StaticResource menuOrderBtn}" VerticalAlignment="Top" HorizontalAlignment="Right" Command="{Binding order.takeOrderBtnICommand}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock TextBlock.FontFamily="Courier" TextBlock.FontSize="14" TextBlock.Foreground="White">TAKE ORDER</TextBlock>
                            <Image Source="/images/check.png" Height="15" Width="15" Margin="10,0,0,2"/>
                        </StackPanel>
                    </Button>
                </Grid>
                <ScrollViewer x:Name="sv" Height="{x:Static local:POSConstants.getMenuOrderCheckoutHeight}" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel x:Name="sp" Background="White">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding order.mouseMoveICommand}" >
                                    <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                        </MultiBinding>
                                    </i:InvokeCommandAction.CommandParameter>
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBox Text="DRINKS" Style="{StaticResource menuOrderItem}"/>
                        <ListBox x:Name="drinksListBox" Width="{x:Static local:POSConstants.getMenuOrderWidth}" SelectedIndex="{Binding Path=order.menuOrderListsSelectedIndex[0],  Mode=OneWay}" BorderBrush="Gray" BorderThickness="0.5" ItemContainerStyle="{StaticResource orderItemContainerTemplate}" ItemsSource="{Binding order.menuOrderLists[0]}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding order.selectedItemChangedICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                                <Binding Source="{StaticResource fixedValue0}"/>
                                                <Binding Path="SelectedIndex" ElementName="drinksListBox"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <TextBox Text="SANDWICHES" Style="{StaticResource menuOrderItem}"/>
                        <ListBox x:Name="sandwichesListBox" Width="{x:Static local:POSConstants.getMenuOrderWidth}" SelectedIndex="{Binding Path=order.menuOrderListsSelectedIndex[1],  Mode=OneWay}" BorderBrush="Gray" BorderThickness="0.5" ItemContainerStyle="{StaticResource orderItemContainerTemplate}" ItemsSource="{Binding order.menuOrderLists[1]}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding order.selectedItemChangedICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                                <Binding Source="{StaticResource fixedValue1}"/>
                                                <Binding Path="SelectedIndex" ElementName="sandwichesListBox"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <TextBox Text="HAMBURGERS" Style="{StaticResource menuOrderItem}"/>
                        <ListBox x:Name="hamburgersListBox" Width="{x:Static local:POSConstants.getMenuOrderWidth}" SelectedIndex="{Binding Path=order.menuOrderListsSelectedIndex[2],  Mode=OneWay}" BorderBrush="Gray" BorderThickness="0.5" ItemContainerStyle="{StaticResource orderItemContainerTemplate}" ItemsSource="{Binding order.menuOrderLists[2]}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding order.selectedItemChangedICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                                <Binding Source="{StaticResource fixedValue2}"/>
                                                <Binding Path="SelectedIndex" ElementName="hamburgersListBox"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                        <TextBox Text="DESERT" Style="{StaticResource menuOrderItem}"/>
                        <ListBox x:Name="desertListBox" Width="{x:Static local:POSConstants.getMenuOrderWidth}" SelectedIndex="{Binding Path=order.menuOrderListsSelectedIndex[3],  Mode=OneWay}" BorderBrush="Gray" BorderThickness="0.5" ItemContainerStyle="{StaticResource orderItemContainerTemplate}" ItemsSource="{Binding order.menuOrderLists[3]}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding order.selectedItemChangedICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                                <Binding Source="{StaticResource fixedValue3}"/>
                                                <Binding Path="SelectedIndex" ElementName="desertListBox"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </StackPanel>
                </ScrollViewer>
                <Grid Height="{x:Static local:POSConstants.getMenuOrderTotalHeight}" Background="#FF534D4D">
                    <Grid Width="{x:Static local:POSConstants.getMenuOrderTotalAndSubtotalWidth}" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Path=order.Subtotal}" HorizontalAlignment="Center" Foreground="LawnGreen" FontFamily="Courier" FontWeight="Light" FontSize="32" />
                            <TextBlock Text="Subtotal" HorizontalAlignment="Center" Foreground="White" FontFamily="Courier" FontWeight="ExtraLight" FontSize="15" />
                        </StackPanel>
                    </Grid>
                    <Grid Width="{x:Static local:POSConstants.getMenuOrderTotalAndSubtotalWidth}" Margin="{x:Static local:POSConstants.getMenuOrderTotalAndSubtotalMargin}" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Path=order.Total}" HorizontalAlignment="Center" Foreground="LawnGreen" FontFamily="Courier" FontWeight="Light" FontSize="32" />
                            <TextBlock Text="Total" HorizontalAlignment="Center" Foreground="White" FontFamily="Courier" FontWeight="ExtraLight" FontSize="18" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </StackPanel>
            <Border BorderBrush="LightGray" BorderThickness="0.5" Margin="{x:Static local:POSConstants.getMenuItemsMargin}" Height="{x:Static local:POSConstants.getMenuItemsHeight}" Width="{x:Static local:POSConstants.getMenuItemsWidth}" VerticalAlignment="Center" HorizontalAlignment="Right">
                <TabControl SelectedIndex="{Binding Path=menu.selectedTabIndex, Mode=OneWayToSource}" BorderBrush="LightGray" BorderThickness="0.5">
                    <TabItem Header="HAMBURGERS" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}" >
                        <ScrollViewer x:Name="menuItemsHamburgersScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                      <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                          <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                          </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                      </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                  </i:Interaction.Triggers>
                                  <ListBox x:Name="menuItemsHamburgers" SelectedItem="{Binding menu.menuListsSelectedItem[0]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[0]}" >
                                    <i:Interaction.Triggers>
                                      <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                  </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="MEXICAN" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}">
                        <ScrollViewer x:Name="menuItemsMexicanScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                      <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                          <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                          </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                      </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                  </i:Interaction.Triggers>
                                  <ListBox x:Name="menuItemsMexican" SelectedItem="{Binding menu.menuListsSelectedItem[1]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[1]}" >
                                    <i:Interaction.Triggers>
                                      <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                  </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="SANDWICHES" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}">
                        <ScrollViewer x:Name="menuItemsSandwichesScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                      <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                          <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                          </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                      </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                  </i:Interaction.Triggers>
                                  <ListBox x:Name="menuItemsSandwiches" SelectedItem="{Binding menu.menuListsSelectedItem[2]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[2]}" >
                                      <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                      </i:Interaction.Triggers>
                                  </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="CROISSANT" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}">
                        <ScrollViewer x:Name="menuItemsCroissantScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                      <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                          <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                          </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                      </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                  </i:Interaction.Triggers>
                                  <ListBox x:Name="menuItemsCroissant" SelectedItem="{Binding menu.menuListsSelectedItem[3]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[3]}" >
                                      <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                      </i:Interaction.Triggers>
                                  </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="PANINI" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}">
                        <ScrollViewer x:Name="menuItemsPaniniScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                      <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                          <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                          </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                      </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                  </i:Interaction.Triggers>
                                  <ListBox x:Name="menuItemsPanini" SelectedItem="{Binding menu.menuListsSelectedItem[4]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[4]}" >
                                    <i:Interaction.Triggers>
                                      <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                  </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="MEAT" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}">
                        <ScrollViewer x:Name="menuItemsMeatScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                  <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                      <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                        <i:InvokeCommandAction.CommandParameter>
                                          <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                          </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                      </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                  </i:Interaction.Triggers>
                                  <ListBox x:Name="menuItemsMeat" SelectedItem="{Binding menu.menuListsSelectedItem[5]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[5]}" >
                                      <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                      </i:Interaction.Triggers>
                                  </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="KIDS" Width="{x:Static local:POSConstants.getMenuCatalogTabWidth}" Height="{x:Static local:POSConstants.getMenuCatalogTabHeight}" Style="{StaticResource menuTabItemTemplate}">
                        <ScrollViewer x:Name="menuItemsKidsScroll" CanContentScroll="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                            <StackPanel Orientation="Vertical">
                                <i:Interaction.Triggers>
                                  <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding menu.mouseMoveMenuICommand}" >
                                      <i:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource multiBindCloneConverter}">
                                          <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=ScrollViewer}"/>
                                          <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                        </MultiBinding>
                                      </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                  </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox x:Name="menuItemsKids" SelectedItem="{Binding menu.menuListsSelectedItem[6]}" BorderThickness="0" ItemsPanel="{StaticResource menuItemsPanel}" ItemContainerStyle="{StaticResource menuItemContainerTemplate}" ItemsSource="{Binding menu.menuItemsLists[6]}" >
                                    <i:Interaction.Triggers>
                                      <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction Command="{Binding menu.addMenuItemICommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
        <Grid x:Name="transparentGrayOverlay" Visibility="{Binding Path=order.takeOrderGrayOverlay}" Height="{x:Static local:POSConstants.getScreenHeight}" Width="{x:Static local:POSConstants.getScreenWidth}">
            <Rectangle Fill="DarkGray" Opacity="0.8" />
            <Grid x:Name="dialogBackground" Height="{x:Static local:POSConstants.getDialogBoxHeight}" Width="{x:Static local:POSConstants.getDialogBoxWidth}" >
                <Grid x:Name="dialogBtnText" Background="OrangeRed" Height="{x:Static local:POSConstants.getDialogBoxTextAreaHeight}" Width="{x:Static local:POSConstants.getDialogBoxTextAreaWidth}" VerticalAlignment="Top" >
                    <TextBlock Text="Confirm this order?" FontSize="28" FontFamily="Courier" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <Grid x:Name="dialogBtnAccept" Background="OrangeRed" Height="{x:Static local:POSConstants.getDialogBoxBtnAreaHeight}" Width="{x:Static local:POSConstants.getDialogBoxBtnAreaWidth}" VerticalAlignment="Bottom" HorizontalAlignment="Left" >
                    <Border BorderBrush="Beige" BorderThickness="2" Height="{x:Static local:POSConstants.getDialogBoxBtnAreaHeight}" Width="{x:Static local:POSConstants.getDialogBoxBtnAreaWidth}"/>
                    <TextBlock Text="Accept" FontSize="24" FontFamily="Courier" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseUp">
                            <i:InvokeCommandAction Command="{Binding order.dialogBoxAcceptICommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
                <Grid x:Name="dialogBtnReject" Background="OrangeRed" Height="{x:Static local:POSConstants.getDialogBoxBtnAreaHeight}" Width="{x:Static local:POSConstants.getDialogBoxBtnAreaWidth}" VerticalAlignment="Bottom" HorizontalAlignment="Right" >
                    <Border BorderBrush="Beige" BorderThickness="2" Height="{x:Static local:POSConstants.getDialogBoxBtnAreaHeight}" Width="{x:Static local:POSConstants.getDialogBoxBtnAreaWidth}"/>
                    <TextBlock Text="Reject" FontSize="24" FontFamily="Courier" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseUp">
                            <i:InvokeCommandAction Command="{Binding order.dialogBoxRejectICommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
            </Grid>
            <Border BorderBrush="Beige" BorderThickness="2" Height="{x:Static local:POSConstants.getDialogBoxHeight}" Width="{x:Static local:POSConstants.getDialogBoxWidth}"/>

        </Grid>
    </Grid>
    
</Window>
